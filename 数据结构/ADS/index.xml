<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://ArcticPirateL.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ADS/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://ArcticPirateL.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ADS/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://ArcticPirateL.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ADS/ADS%E7%BB%AA%E8%AE%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ArcticPirateL.github.io/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ADS/ADS%E7%BB%AA%E8%AE%BA/</guid>
      <description>ADS绪论#高级数据结构与算法分析主要包括三块问题：
动态查找问题#总体目的：查找树且完全二叉树（降低高度）。
难度过大，因此数据结构核心目标：有一定自由度。因此需要考虑如何进行树的平衡。
高级堆（优先队列问题）#总体目的：插入任意&amp;amp;删除最小/最大。
结构特性：完全二叉树（structure property）
排序特性：结点上满足堆的条件（所在子树最大/最小）（order property）。
新问题：云计算，每个云端服务器管理一个堆，本质上为资源整合。（弹性计算）
​ 云计算的调度问题，把正在计算的任务迁移到其他机器，使其最高效运转，即两个优先队列的合并问题。
算法思想#包括分治算法、动态规划、贪婪算法、NPC问题……
大致归为两类：
经典算法：如贪婪算法、分治算法…… 非经典算法：寻找次优解，如加速、并行…… </description>
    </item>
    
  </channel>
</rss>
